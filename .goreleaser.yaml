project_name: fga

before:
  hooks:
    - go mod tidy
    - ./scripts/completions.sh
    - ./scripts/manpages.sh

builds:
  -
    main: ./main.go
    binary: fga
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    ldflags:
      - "-s -w"
      - "-X github.com/openfga/cli/internal/build.Version={{ .Version }}"
      - "-X github.com/openfga/cli/internal/build.Commit={{.Commit}}"
      - "-X github.com/openfga/cli/internal/build.Date={{.Date}}"

dockers:
  - goos: linux
    goarch: amd64

    dockerfile: .goreleaser.Dockerfile

    image_templates:
      - "openfga/cli:latest-amd64"
      - "openfga/cli:{{ .Tag }}-amd64"
      - "openfga/cli:v{{ .Version }}-amd64"
      - "openfga/cli:v{{ .Major }}-amd64"
      - "openfga/cli:v{{ .Major }}.{{ .Minor }}-amd64"
      - "openfga/cli:v{{ .Major }}.{{ .Minor }}.{{ .Patch }}-amd64"

    use: buildx
    build_flag_templates:
      - "--platform=linux/amd64"
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"

  - goos: linux
    goarch: arm64

    dockerfile: .goreleaser.Dockerfile

    image_templates:
      - "openfga/cli:latest-arm64"
      - "openfga/cli:{{ .Tag }}-arm64"
      - "openfga/cli:v{{ .Version }}-arm64"
      - "openfga/cli:v{{ .Major }}-arm64"
      - "openfga/cli:v{{ .Major }}.{{ .Minor }}-arm64"
      - "openfga/cli:v{{ .Major }}.{{ .Minor }}.{{ .Patch }}-arm64"

    use: buildx

    build_flag_templates:
      - "--platform=linux/arm64"

docker_manifests:
  - name_template: openfga/cli:latest
    image_templates:
      - openfga/cli:latest-amd64
      - openfga/cli:latest-arm64
  - name_template: openfga/cli:v{{ .Version }}
    image_templates:
      - openfga/cli:v{{ .Version }}-amd64
      - openfga/cli:v{{ .Version }}-arm64
  - name_template: openfga/cli:v{{ .Major }}
    image_templates:
      - openfga/cli:v{{ .Major }}-amd64
      - openfga/cli:v{{ .Major }}-arm64
  - name_template: openfga/cli:v{{ .Major }}.{{ .Minor }}
    image_templates:
      - openfga/cli:v{{ .Major }}.{{ .Minor }}-amd64
      - openfga/cli:v{{ .Major }}.{{ .Minor }}-arm64
  - name_template: openfga/cli:v{{ .Major }}.{{ .Minor }}.{{ .Patch }}
    image_templates:
      - openfga/cli:v{{ .Major }}.{{ .Minor }}.{{ .Patch }}-amd64
      - openfga/cli:v{{ .Major }}.{{ .Minor }}.{{ .Patch }}-arm64

release:
  github:
    owner: openfga
    name: cli

sboms:
  - artifacts: archive

signs:
- cmd: cosign
  env:
  - COSIGN_EXPERIMENTAL=1
  certificate: '${artifact}.pem'
  args:
    - sign-blob
    - '--output-certificate=${certificate}'
    - '--output-signature=${signature}'
    - '${artifact}'
    - "--yes" # needed on cosign 2.0.0+
  artifacts: checksum
  output: true

docker_signs:
  - cmd: cosign
    env:
    - COSIGN_EXPERIMENTAL=1
    artifacts: manifests
    output: true
    args:
    - 'sign'
    - '${artifact}'
    - "--yes" # needed on cosign 2.0.0+

brews:
  - repository:
      owner: openfga
      name: homebrew-tap
    homepage: "https://openfga.dev/"
    description: "A cross-platform CLI to interact with an OpenFGA server."
    license: "Apache-2.0"
    folder: "Formula"
    url_template: "https://github.com/openfga/cli/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
    download_strategy: CurlDownloadStrategy
    skip_upload: "auto"
    # update the head formula on each release
    custom_block: |
      head "https://github.com/openfga/cli.git", :branch => "main"
    dependencies:
      - name: go
        type: optional
      - name: git
    install: |
      bin.install "fga"
      bash_completion.install "completions/fga.bash" => "fga"
      zsh_completion.install "completions/fga.zsh" => "_fga"
      fish_completion.install "completions/fga.fish"
      man1.install "manpages/fga.1.gz"
    test: |
      system "#{bin}/fga version"

aurs:
  - package: |-
      # bin
      install -Dm755 "./fga" "${pkgdir}/usr/bin/fga"
      # license
      install -Dm644 "./LICENSE.md" "${pkgdir}/usr/share/licenses/fga/LICENSE"
      # completions
      mkdir -p "${pkgdir}/usr/share/bash-completion/completions/"
      mkdir -p "${pkgdir}/usr/share/zsh/site-functions/"
      mkdir -p "${pkgdir}/usr/share/fish/vendor_completions.d/"
      install -Dm644 "./completions/fga.bash" "${pkgdir}/usr/share/bash-completion/completions/fga"
      install -Dm644 "./completions/fga.zsh" "${pkgdir}/usr/share/zsh/site-functions/_fga"
      install -Dm644 "./completions/fga.fish" "${pkgdir}/usr/share/fish/vendor_completions.d/fga.fish"
      # manpages
      install -Dm644 "./manpages/fga.1.gz" "${pkgdir}/usr/share/man/man1/fga.1.gz"

nfpms:
  - package_name: fga
    vendor: OpenFGA
    homepage: https://openfga.dev/
    maintainer: 'OpenFGA <contact@openfga.dev>'
    description: |-
      A cross-platform CLI to interact with an OpenFGA server.
    license: Apache 2.0
    formats:
      - apk
      - deb
      - rpm
      - termux.deb
      - archlinux
    provides:
      - fga
    suggests:
      - jq
    bindir: /usr/bin
    contents:
      - src: ./completions/fga.bash
        dst: /usr/share/bash-completion/completions/fga
        file_info:
          mode: 0644
      - src: ./completions/fga.fish
        dst: /usr/share/fish/vendor_completions.d/fga.fish
        file_info:
          mode: 0644
      - src: ./completions/fga.zsh
        dst:  /usr/share/zsh/vendor-completions/_fga
        file_info:
          mode: 0644
      - src: ./manpages/fga.1.gz
        dst: /usr/share/man/man1/fga.1.gz
        file_info:
          mode: 0644

archives:
  - files:
      - README.md
      - LICENSE
      - CHANGELOG.md
      - completions/*
      - manpages/*

checksum:
  name_template: 'checksums.txt'
  extra_files:
    - glob: README.md
    - glob: LICENSE
    - glob: CHANGELOG.md
    - glob: completions/*
    - glob: manpages/*

snapshot:
  name_template: "{{ incpatch .Version }}-next"

report_sizes: true

changelog:
  sort: asc
  filters:
    exclude:
      - '^chore' # chore commits
      - '^release' # release commits
      - '(#\d*)$' # merge commits
